name: Release Build
on:
  push:
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'

jobs:
  build-matrix:
    name: Build matrix
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: set-matrix
        name: Collect all tests
        run: |
          tests="$(find .github/tests -maxdepth 1 -type f -name '*.sh' -exec basename {} \; | sort | uniq)"
          tests_json="$(echo "$tests" | jq -c --slurp --raw-input 'split("\n") | map(select(. != ""))')"
          echo "tests=$tests_json" >> $GITHUB_OUTPUT
          echo "Collected tests: $tests_json"

    outputs:
      tests: ${{ steps.set-matrix.outputs.tests }}

  integration-tests:
    runs-on: ubuntu-22.04
    needs: [build-matrix]
    permissions:
      contents: read
    strategy:
      matrix:
       tests: ${{ fromJson(needs.build-matrix.outputs.tests) }}
    steps:
      - uses: actions/checkout@v4
      - name: Build containers
        run: ./build.sh
        shell: bash
        working-directory: ./.github/tests/it
      - name: Run tests
        run: bash ${{ matrix.tests }}
        shell: bash
        working-directory: ./.github/tests

  goreleaser:
    runs-on: ubuntu-22.04
    needs: integration-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Log in to GHCR
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REPO: ghcr.io/${{ github.repository }}

